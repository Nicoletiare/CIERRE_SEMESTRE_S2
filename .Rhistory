ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#ejercicio 1#
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
ejemplos = sample(
jercicio 2#
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
# respuesta:En R usamos set.seed(10) para inicializar el generador de números aleatorios en 10.
#El número que le ponemos a set.seed es arbitrario pero debe ser un número entero.
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
set.seed(10)
set.seed(10)
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
set.seed(66)
set.seed(66)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
set.seed(66)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
cbind(df,cont)
#ejercicio 4
length ("positivo")
length (positivo[[1]])
length ("positivo"[[1]])
$positivo
unique(positivo)
unique(ejemplos[ejemplos==positivo])
unique(ejemplos[ejemplos=="positivo"])
#ejercicio 4
length (ejemplos[ejemplos=="positivo"])
length (ejemplos[ejemplos=="neutros"])
length (ejemplos[ejemplos=="negativo"])
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#ejercicio 1#
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#ejercicio 1#
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#ejercicio 2#
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
#ejercicio 3
set.seed(66)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros"  "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
#ejercicio 4
length (ejemplos[ejemplos=="positivo"])
length (ejemplos[ejemplos=="negativo"])
length (ejemplos[ejemplos=="neutros"])
#ejercicio 3
set.seed(66)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros" "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
length (ejemplos[ejemplos=="positivo"])
length (ejemplos[ejemplos=="negativo"])
length (ejemplos[ejemplos=="neutros"])
carta = sample(c("1", "10", "11", "12", "13", "9", "8", "7", "6", "5", "4", "3", "2"), 100, replace = TRUE)
carta = sample(c("1", "10", "11", "12", "13", "9", "8", "7", "6", "5", "4", "3", "2"), 31, replace = TRUE)
set.seed (6)
rnorm (6)
carta = sample(c("1", "10", "11", "12", "13", "9", "8", "7", "6", "5", "4", "3", "2"), 31, replace = TRUE)
set.seed (6)
carta = sample(c("1", "10", "11", "12", "13", "9", "8", "7", "6", "5", "4", "3", "2"), 31, replace = TRUE)
rnorm (6)
carta = sample(c("1", "10", "11", "12", "13", "9", "8", "7", "6", "5", "4", "3", "2"), 52, replace = TRUE)
-1<-carta<10
-1 <- carta < 10
carta = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
mano <- sample(deck,5,F)
mano
mano <- sample(carta,5,F)
mano
juego <- sample(carta,31,F)
juego
set.seed (6)
carta = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
juego <- sample(carta,31,F)
juego
#salieron ya 31 cartas
juego <- sample(carta,31,F)
juego
#condicion de conteo de carta
-1<-c(14,12,13,10,11)
#condicion de conteo de carta
-1<-carta(14,12,13,10,11)
#salieron ya 31 cartas
lanzamiento_1 <- sample(carta,31,F)
juego
#condicion de conteo de carta
x == 14,12,13,10,11
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1==14|lanzamiento_1==13|lanzamiento_1==12|lanzamiento_1==11|lanzamiento_1==10)
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1==14|lanzamiento_1==13|lanzamiento_1==12|lanzamiento_1==11|lanzamiento_1==10,-1)
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1==14|lanzamiento_1==13|lanzamiento_1==12|lanzamiento_1==11|lanzamiento_1==10,-1)
replace(lanzamiento_1,lanzamiento_1==9|lanzamiento_1==8|lanzamiento_1==7,-1)
source('C:/Users/nicol/OneDrive/Escritorio/r/ejercicio 4.R')
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1==14|lanzamiento_1==13|lanzamiento_1==12|lanzamiento_1==11|lanzamiento_1==10,-1)
replace(lanzamiento_1,lanzamiento_1==9|lanzamiento_1==8|lanzamiento_1==7,-1)
#un maso de carta posee 52 cartas (sin joker)
carta = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
replace(lanzamiento_1,lanzamiento_1==9|lanzamiento_1==8|lanzamiento_1==7,1)
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1==14|lanzamiento_1==13|lanzamiento_1==12|lanzamiento_1==11|lanzamiento_1==10,-1)
replace(lanzamiento_1,lanzamiento_1==9|lanzamiento_1==8|lanzamiento_1==7,1)
library(readxl)
ejercicio_6 <- read_excel("ejercicio 6.xlsx")
View(ejercicio_6)
m_crisis<- read_html("https://www.biobiochile.cl/noticias/vida-actual/padres-e-hijos/2019/11/11/crisis-social-en-chile-como-manejar-el-estado-emocional-de-tus-hijos-segun-su-edad.shtml")
m_crisis<- read_html("https://www.biobiochile.cl/noticias/vida-actual/padres-e-hijos/2019/11/11/crisis-social-en-chile-como-manejar-el-estado-emocional-de-tus-hijos-segun-su-edad.shtml")
library('rvest')
b_crisis<- read_html("https://www.atcom.cl/4-positivos-acuerdo-constitucional-economia")
#titulo de la noticia
titu_b_crisis<- b_crisis %>%
html_node("title") %>%
html_text()
#cuerpo de la noticia
p_b_crisis<- b_crisis %>%
html_nodes("p") %>%
html_text()
m_crisis<- read_html("https://www.biobiochile.cl/noticias/vida-actual/padres-e-hijos/2019/11/11/crisis-social-en-chile-como-manejar-el-estado-emocional-de-tus-hijos-segun-su-edad.shtml")
#titulo de la noticia
titu_m_crisis<- m_crisis %>%
html_node("title") %>%
html_text()
#cuerpo de la noticia
p_m_crisis<- m_crisis %>%
html_nodes("p") %>%
html_text()
gsub(",","\\s",p_m_crisis)
texto <- gsub(",","\\s",p_m_crisis)
gsub("\n","\\s",p_b_crisis)
texto <- gsub("\n","\\s",p_m_crisis)
gsub ("[:punct:]","\\s",p_m_crisis)
texto <- gsub ("[:punct:]","\\s",p_m_crisis)
splitEspacioTexto_m <- strsplit(p_m_crisis," ")[c(1,2)]
print(splitEspacioTexto_m)
splitEspacioTexto_m <- tolower(splitEspacioTexto_m)
listexto_m <- unlist(splitEspacioTexto_m)
print(listexto_m)
tablaPalabras_m <- table(listexto_m)
print (tablaPalabras_m)
#table(unlistTexto) este me cuenta las veces que se repite la palabra
dfPalabras <- as.data.frame(tablaPalabras_m)
gsub(",","\\s",p_b_crisis)
texto <- gsub(",","\\s",p_b_crisis)
gsub("\n","\\s",p_b_crisis)
texto <- gsub("\n","\\s",p_b_crisis)
gsub("\rs","\\s",p_b_crisis)
texto <- gsub("\rs","\\s",p_b_crisis)
splitEspacioTexto_b <- strsplit(texto," ")[c(1,2)]
tablaPalabras<- table("splitEspacioTexto_b")
dfPalabras <- as.data.frame(splitEspacioTexto_b)
print(dfPalabras)
splitEspacioTexto_b <- tolower(splitEspacioTexto_b)
listexto_b <- unlist(splitEspacioTexto_b)
print(listexto_b)
#unlist te enumera las palabras del texto
dim(listexto_b )
summary("listexto_b")
tablaPalabras<- table("splitEspacioTexto_b")
print (splitEspacioTexto_b)
#table(unlistTexto) este me cuenta las veces que se repite la palabra
dfPalabras <- as.data.frame(tablaPalabras_b)
tablaPalabras<- table("splitEspacioTexto_b")
tablaPalabras
tablaPalabras<- table("listexto_b")
tablaPalabras
View(m_crisis)
View(b_crisis)
View(dfPalabras)
#table(unlistTexto) este me cuenta las veces que se repite la palabra
dfPalabras <- as.data.frame(tablaPalabras_b)
dfPalabras <- as.data.frame(splitEspacioTexto_b)
print(dfPalabras)
gsub(",","\\s",p_b_crisis)
texto <- gsub(",","\\s",p_b_crisis)
gsub("\n","\\s",p_b_crisis)
texto <- gsub("\n","\\s",p_b_crisis)
gsub("\rs","\\s",p_b_crisis)
gsub(",","\\s",p_b_crisis)
texto <- gsub(",","\\s",p_b_crisis)
gsub("\n","\\s",texto)
texto2 <- gsub("\n","\\s",texto)
gsub("\rs","\\s",texto2)
texto3 <- gsub("\rs","\\s",texto2)
splitEspacioTexto_b <- strsplit(texto3," ")[c(1,2)]
tablaPalabras<- table("splitEspacioTexto_b")
dfPalabras_b <- as.data.frame(splitEspacioTexto_b)
print(dfPalabras)
splitEspacioTexto_b <- tolower(splitEspacioTexto_b)
listexto_b <- unlist(splitEspacioTexto_b)
print(listexto_b)
#unlist te enumera las palabras del texto
dim(listexto_b )
summary("listexto_b")
tablaPalabras<- table("listexto_b")
tablaPalabras
print (splitEspacioTexto_b)
#table(unlistTexto) este me cuenta las veces que se repite la palabra
dfPalabras <- as.data.frame(tablaPalabras_b)
tablaPalabras_b<- table("listexto_b")
tablaPalabras_b
print (splitEspacioTexto_b)
#table(unlistTexto) este me cuenta las veces que se repite la palabra
dfPalabras <- as.data.frame(tablaPalabras_b)
View(dfPalabras_b)
splitEspacioTexto_b <- strsplit(texto3," ")[c(2)]
tablaPalabras<- table("splitEspacioTexto_b")
dfPalabras_b <- as.data.frame(splitEspacioTexto_b)
print(dfPalabras)
splitEspacioTexto_b <- tolower(splitEspacioTexto_b)
listexto_b <- unlist(splitEspacioTexto_b)
print(listexto_b)
#unlist te enumera las palabras del texto
dim(listexto_b )
summary("listexto_b")
tablaPalabras_b<- table("listexto_b")
tablaPalabras_b
palabras <- read_excel("ejercicio  6.xlsx")
#importar datos
library(readxl)
palabras <- read_excel("ejercicio  6.xlsx")
View(ejercicio_6)
View(ejercicio 6)
palabras
plot(palabras[,2], palabras[,3], main="Gráfica 01.1a.: Diagrama de Dispersión")
(A ~ B, data = palabras, xlab = "Desconfianza hacia los partidos políticos", ylab = "Desinterés por la política")
library(foreign)
library(ggplot2)
library(psych)
plot(A ~ B, data = palabras, xlab = "Desconfianza hacia los partidos políticos", ylab = "Desinterés por la política")
palabrass <- lm(A ~ B, data = palabras)
abline(palabrass, col = "red")
plot(palabras[,2], palabras[,3], main="Gráfica 01.1a.: Diagrama de Dispersión")
#titulo de la noticia
titu_m_crisis<- m_crisis %>%
html_node("title") %>%
html_text()
#cuerpo de la noticia
p_m_crisis<- m_crisis %>%
html_nodes("p") %>%
html_text()
b_crisis<- read_html("https://www.atcom.cl/4-positivos-acuerdo-constitucional-economia")
plot(A ~ B, data = palabras)
plot(A ~ B, data = palabras)
nombres=unique(unlist(ejemplos))
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros" "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#ejercicio 2#
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
nombres=unique(unlist(ejemplos))
nombres
"neutros" "negativo" "positivo"
for(i in 1:length(nombres)) {
index=sapply(ejemplos, function(x) match(nombres[i],x,nomatch =0) > 0)
cat(nombres[i],"esta en la(s) listas(s)",which(index),"\n")
}
#ejercicio 3
set.seed(66)
cartas = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
# la primera partida la cuenta correinte se encuentra en 0
C.corriente<-0
for (i in 1:length(lanzamiento_1)){
if(lanzamiento_1[i]==2|lanzamiento_1 [i]==3|lanzamiento_1 [i]==4|lanzamiento_1 [i]==5|lanzamiento_1 [i]==6) {
C.corriente<-C.corriente+1 } else if (lanzamiento_1 [i]==14|lanzamiento_1 [i]==13|lanzamiento_1 [i]==12|lanzamiento_1 [i]==11|lanzamiento_1 [i]==10){
C.corriente<-C.corriente-1} else if (lanzamiento_1 [i]==7|lanzamiento_1 [i]==8|lanzamiento_1 [i]==9){
C.corriente<-C.corriente+0
}
}
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
#cuenta corrriente es positivo por lo que es mas problame que salgan cartas grande (correspondiente a -1), estas favorece al jugador ya que aumenta la posibilidades
# de ganar y obtener 21.
typehand<-function (x,indexnum,starting=8)
{
grupo_df<- hand_function(starting)
grupo_df%>%
group_by(grupo) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
filter (n==indexnum) %>%
nrow() %>% return()
}
prob_pares <- function(x,typeindex){
out <- sapply(1:1000, typehand,indexnum=typeindex,starting=x)
out<- sum(out>0)/1000
return (out)
}
prob_pares(1,2)
prob_vec<-lapply(1:14, prob_pares,typeindex=4)
plot(1:14, prob_vec, type='l')
cartas(runif(480000), 48)
#salieron ya 31 cartas
lanzamiento_1 <- sample(carta,31,F)
lanzamiento_2 <- sample(carta,17,F)
#condicion de conteo de carta
replace(lanzamiento_1,lanzamiento_1(A,13,12,11),-1)
replace(lanzamiento_1,lanzamiento_1==9|lanzamiento_1==8|lanzamiento_1==7,1)
cards
C.corriente
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
lanzamiento_2 <- sample(cartas,17,F)
lanzamiento_2
cartas <- c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
cartas = c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
#un maso de carta posee 52 cartas (sin joker)
cartas = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52, replace = TRUE)
#un maso de carta posee 52 cartas (sin joker)
cartas = sample(c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52
)
#salieron ya 31 cartas
lanzamiento_1 <- sample(carta,31,F)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2), 52)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2)
C.corriente<-0
for (i in 1:length(lanzamiento_1)){
if(lanzamiento_1[i]==2|lanzamiento_1 [i]==3|lanzamiento_1 [i]==4|lanzamiento_1 [i]==5|lanzamiento_1 [i]==6) {
C.corriente<-C.corriente+1 } else if (lanzamiento_1 [i]==14|lanzamiento_1 [i]==13|lanzamiento_1 [i]==12|lanzamiento_1 [i]==11|lanzamiento_1 [i]==10){
C.corriente<-C.corriente-1} else if (lanzamiento_1 [i]==7|lanzamiento_1 [i]==8|lanzamiento_1 [i]==9){
C.corriente<-C.corriente+0
}
}
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
lanzamiento_2 <- sample(cartas,17,F)
lanzamiento_2
lanzamiento_2 <- sample(cartas,17,v)
lanzamiento_2 <- sample(cartas,17,V)
lanzamiento_2 <- sample(cartas-lanzamiento,17,F)
lanzamiento_1-lanzamiento_2
lanzamiento_1 - lanzamiento_2
lanzamiento_2 <- sample(cartas-lanzamiento,17,F)
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
lanzamiento_2 <- sample(cartas-lanzamiento,17,F)
lanzamiento_2 <- sample(cartas,17,F)
lanzamiento_2
lanzamiento_1 - lanzamiento_2
lanzamiento_2 <-lazamiento_1[!is.na(lanzamiento_1)]
lanzamiento_2 <-sample()[!is.na(lanzamiento_1)]
lanzamiento_2 <- [!is.na(lanzamiento_1)]
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
#un maso de carta posee 48 cartas (sin joker)
# se juega contra Croupiere
# la banca se plantea en 21
# 14 es igual a A
# 13 es igual a K
# 12 es igual a Q
# 11 es igual a J
set.seed(52)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2)
C.corriente<-0
for (i in 1:length(lanzamiento_1)){
if(lanzamiento_1[i]==2|lanzamiento_1 [i]==3|lanzamiento_1 [i]==4|lanzamiento_1 [i]==5|lanzamiento_1 [i]==6) {
C.corriente<-C.corriente+1 } else if (lanzamiento_1 [i]==14|lanzamiento_1 [i]==13|lanzamiento_1 [i]==12|lanzamiento_1 [i]==11|lanzamiento_1 [i]==10){
C.corriente<-C.corriente-1} else if (lanzamiento_1 [i]==7|lanzamiento_1 [i]==8|lanzamiento_1 [i]==9){
C.corriente<-C.corriente+0
}
}
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
#un maso de carta posee 48 cartas (sin joker)
# se juega contra Croupiere
# la banca se plantea en 21
# 14 es igual a A
# 13 es igual a K
# 12 es igual a Q
# 11 es igual a J
set.seed(48)
cartas=c(14,14,14,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2)
C.corriente<-0
for (i in 1:length(lanzamiento_1)){
if(lanzamiento_1[i]==2|lanzamiento_1 [i]==3|lanzamiento_1 [i]==4|lanzamiento_1 [i]==5|lanzamiento_1 [i]==6) {
C.corriente<-C.corriente+1 } else if (lanzamiento_1 [i]==14|lanzamiento_1 [i]==13|lanzamiento_1 [i]==12|lanzamiento_1 [i]==11|lanzamiento_1 [i]==10){
C.corriente<-C.corriente-1} else if (lanzamiento_1 [i]==7|lanzamiento_1 [i]==8|lanzamiento_1 [i]==9){
C.corriente<-C.corriente+0
}
}
# se define como lanzamiento 1 a todo los lanzamientos desde el comienzo a hasta que salieron 31 cartas.
lanzamiento_1 <- sample(cartas,31,F)
lanzamiento_1
C.corriente
